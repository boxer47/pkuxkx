#class wat open
#var wat_max_level 3;
#alias {wat.q} {
    #if {"${fm_remaining_time}" == "0"} {
        wat.stop;
        chain fullme wat.start;
    };
    #else {
        #var quest wat;
        on_health {
            ask ke about 进塔;
            detect_mingjiao wushi;
            killall wushi;
        };
    };
};

#alias {wat.up} {
    up;
    detect_mingjiao wushi;
    killall wushi;
};

#alias {wat.d} {
    #var quest nil;
    qiao luo;
};

#alias {wat.start} {
    #class wat.auto.inner open;
    #var wat_count 0;
    #var wat_level 1;
    #action {如果你继续上楼闯关} {
        #math wat_level ${wat_level}+1;
        #if {${wat_level} <= ${wat_max_level}} {
            on_health {
                wat.up;
            };
        };
        #else {
            #math wat_count ${wat_count}+1;
            show_to_info wat 次数: ${wat_count};
            wat.d;
            #delay {5} {
                jq;
            };
        };
    };

    #action {阁下刚刚来过} {
        jq;
    };

    #action {万安塔任务%*仍需%*秒才能接到下个任务} {
        #var wat_level 1;
        #var second @ctd{%%2};
        #math delay_time ${second}+10;
        show_to_info wat 等待 ${delay_time} 秒;
        #delay {wat} {
            wat.q;
        } {${delay_time}};
    } {2};

    #action {万安塔任务%*仍需%S分%S秒才能接到下个任务。} {
        #var wat_level 1;
        #var minute @ctd{%%2};
        #var second @ctd{%%3};
        #math delay_time ${minute}*60+${second}+10;
        show_to_info wat 等待 ${delay_time} 秒;
        #delay {wat} {
            wat.q;
        } {${delay_time}};
    } {1};

    #class wat.auto.inner close;
    gt wat;
    on_there {
        show_to_quest 爬塔;
        wat.q;
    };
};

#alias {wat.stop} {
    #class wat.auto.inner kill;
    show_to_quest 爬塔结束;
};

#action {^恭喜你，答对了口令，你可以敲锣离开了} {
    wat.d;
};
#class wat close